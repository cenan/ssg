#!/usr/bin/env python

import os
import sys
import getopt
import glob

import config
import dev_server

DEST_DIR = os.getcwd()

def create():
	os.mkdir(os.path.join(DEST_DIR, 'source'))
	os.mkdir(os.path.join(DEST_DIR, 'html'))
	os.mkdir(os.path.join(DEST_DIR, 'templates'))
	f = open(os.path.join(DEST_DIR, 'ssg.yaml'), "w")
	f.write("version: 1\n")
	f.write("template_dir: ./templates\n")
	f.write("output_dir: ./html\n")
	f.write("source_dir: ./source\n")
	f.close()

def generate():
	import markdown2
	from jinja2 import Environment, FileSystemLoader
	env = Environment(loader=FileSystemLoader(config.get("template_dir")))
	template = env.get_template("article.html")
	for f in glob.glob(os.path.join(config.get("source_dir"), "*.md")):
		filename, _ = os.path.splitext(os.path.basename(f))
		content  = markdown2.markdown(open(f).read())
		target_file = os.path.join(config.get("output_dir"), filename) + ".html"
		open(target_file, "w").write(template.render(content=content))

def serve():
	from BaseHTTPServer import HTTPServer
	from BaseHTTPServer import BaseHTTPRequestHandler
	try:
		srv = HTTPServer(("", 9876), dev_server.SsgDevServer)
		print "Serving on localhost:9876"
		srv.serve_forever()
	except KeyboardInterrupt:
		srv.socket.close()
		sys.exit(0)

def usage():
	print "usage: ssg options"
	print "  where options are:"
	print "    -c[reate]   = creates a skeleton project in current directory"
	print "    -g[enerate] = generate the output"
	print "    -s[erve]    = serves HTML directory on localhost:9876"
	print "  when using the long forms prepend --"
	print "  example: ssg --create"

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:],
				"cgs",
				["create","generate","serve"])
	except getopt.GetoptError, err:
		print str(err)
		usage()
		sys.exit(2)
	for o, a in opts:
		if o in ("-c", "--create"):
			create()
		elif o in ("-g", "--generate"):
			generate()
		elif o in ("-s", "--serve"):
			serve()
	if len(opts) == 0:
		usage()

if __name__=="__main__":
    main()

